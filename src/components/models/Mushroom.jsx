/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.5 public/models/Mushroom.gltf -o src/components/models/Mushroom.jsx -r public/
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations, useCursor } from '@react-three/drei'

export function Mushroom(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/Mushroom.gltf')
  const { actions } = useAnimations(animations, group)
  const [hovered, setHovered] = useState(false)

  useCursor(hovered);

  useEffect(() => {
    actions['Idle'].reset().fadeIn(0.5).play();
    return () => actions['Idle'].fadeOut(0.5)
  }, [])

  useEffect(() => {
    if (hovered) {
      actions['Dance'].reset().fadeIn(0.5).play();
      return () => actions['Dance'].fadeOut(0.5)
    }
  }, [hovered])

  return (
    <group ref={group} {...props} dispose={null} onPointerOver={() => setHovered(true)} onPointerLeave={() => setHovered(false)}>
      <group name="Scene">
        <group name="MonsterArmature">
          <primitive object={nodes.Body} />
          <primitive object={nodes.Head} />
          <skinnedMesh name="Mushroom" geometry={nodes.Mushroom.geometry} material={materials.Texture} skeleton={nodes.Mushroom.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Mushroom.gltf')
